name: Development

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "pretix_mandatory_product/locale/**"
      - "pretix_mandatory_product/static/**"
  pull_request:
    branches: [main, master]
    paths-ignore:
      - "pretix_mandatory_product/locale/**"
      - "pretix_mandatory_product/static/**"
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "05 8 * * *"

jobs:
  isort:
    name: isort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install isort
      - name: Install Project
        run: python setup.py develop
      - name: Run isortf
        run: isort -c .
  flake:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install flake8
      - name: Install Project
        run: python setup.py develop
      - name: Run flake8
        run: flake8 .
        working-directory: .
  black:
    name: black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install black
      - name: Install Project
        run: python setup.py develop
      - name: Run black
        run: black --check .
        working-directory: .
  docformatter:
    name: docformatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install docformatter
      - name: Install Project
        run: python setup.py develop
      - name: Run docformatter
        run: docformatter --check -r .
        working-directory: .
  test:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        database: [sqlite, postgres]
    runs-on: ubuntu-latest
    name: Tests
    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "15"
          postgresql db: "pretix"
          postgresql user: "postgres"
          postgresql password: "postgres"
        if: matrix.database == 'postgres'
      - uses: actions/checkout@v4
        with:
          repository: pretix/pretix
          path: pretix
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Install system dependencies
        run: sudo apt update && sudo apt install gettext
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install pytest pytest-django
      - name: Install Project
        run: pip3 install -e .
      - name: Run checks
        run: PRETIX_CONFIG_FILE=pretix/src/tests/travis_${{ matrix.database }}.cfg pytest

  upstream-compat:
    runs-on: ubuntu-latest
    name: Test Compatibility against upstream pretix
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        database: [sqlite, postgres]
    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "15"
          postgresql db: "pretix"
          postgresql user: "postgres"
          postgresql password: "postgres"
        if: matrix.database == 'postgres'
      - uses: actions/checkout@v4
        with:
          repository: pretix/pretix
          path: pretix
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install system dependencies
        run: sudo apt update && sudo apt install gettext
      - name: Install Python dependencies
        run: pip3 install -e ".[dev]" psycopg2-binary
        working-directory: pretix
      - name: Install Pretix dependencies
        run: pip3 install -e .
        working-directory: pretix
      - name: Run checks
        run: python3 manage.py check
        working-directory: pretix/src
      - name: Install JS dependencies
        working-directory: pretix/src
        run: make npminstall
      - name: Compile
        working-directory: pretix/src
        run: make all compress
      - name: Checkout pretix-mandatory-product
        uses: actions/checkout@v4
        with:
          path: pretix-mandatory-product
      - name: Install Project
        run: pip3 install -e .
        working-directory: pretix-mandatory-product
      - name: Run checks
        run: PRETIX_CONFIG_FILE=../pretix/src/tests/travis_${{ matrix.database }}.cfg pytest
        working-directory: pretix-mandatory-product

  packaging:
    name: packaging
    runs-on: ubuntu-latest
    needs:
      - test
      - docformatter
      - black
      - flake
      - isort
      - upstream-compat
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/pretix-mandatory-product
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install twine check-manifest
      - name: Install Project
        run: python setup.py develop
      - name: Run check-manifest
        run: check-manifest .
        working-directory: .
      - name: Build package
        run: python setup.py sdist
        working-directory: .
      - name: Check package
        run: twine check dist/*
        working-directory: .
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
