name: Code Style

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "pretix_mandatory_product/locale/**"
      - "pretix_mandatory_product/static/**"
  pull_request:
    branches: [main, master]
    paths-ignore:
      - "pretix_mandatory_product/locale/**"
      - "pretix_mandatory_product/static/**"

jobs:
  isort:
    name: isort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install isort
      - name: Install Project
        run: python setup.py develop
      - name: Run isortf
        run: isort -c .
  flake:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install flake8
      - name: Install Project
        run: python setup.py develop
      - name: Run flake8
        run: flake8 .
        working-directory: .
  black:
    name: black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install black
      - name: Install Project
        run: python setup.py develop
      - name: Run black
        run: black --check .
        working-directory: .
  docformatter:
    name: docformatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install docformatter
      - name: Install Project
        run: python setup.py develop
      - name: Run docformatter
        run: docformatter --check -r .
        working-directory: .
  test:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ubuntu-latest
    name: Tests
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install system dependencies
        run: sudo apt update && sudo apt install gettext
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install pytest pytest-django
      - name: Install Project
        run: python setup.py develop
      - name: Run checks
        run: py.test tests

  packaging:
    name: packaging
    runs-on: ubuntu-latest
    needs:
      - test
      - docformatter
      - black
      - flake
      - isort
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/pretix-mandatory-product
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install pretix
        run: pip3 install pretix
      - name: Install Dependencies
        run: pip3 install twine check-manifest
      - name: Install Project
        run: python setup.py develop
      - name: Run check-manifest
        run: check-manifest .
        working-directory: .
      - name: Build package
        run: python setup.py sdist
        working-directory: .
      - name: Check package
        run: twine check dist/*
        working-directory: .
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
